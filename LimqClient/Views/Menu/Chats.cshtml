@model ICollection<MyNamespace.GetAllChatsDto>
@{
    ViewData["Title"] = "Chat Page";
    string[] colors = ViewData["Theme"] as string[];
}

<!DOCTYPE html>

<html>

    <head>
        <meta charset="utf-8" />
        <style>
            html, body {
                position: absolute;
                width: 100%;
                height: 100%;
                margin: 0;
                overflow-y: scroll;

                background: @colors[13];
            }

            ::-webkit-scrollbar { 
                width: 0px;  
                background: transparent;  
            }
            .container{
               
                height: 90px;
                margin: 0 auto;
                margin-top: 20px;
                display: flex;
                justify-content: space-between;
            }

            .container2{
                width: 1756px;
                display: flex;
                flex-direction: column;
                margin: 0 auto;
                margin-top: 20px;
                display: flex;
                justify-content: space-between;
                
            }

            .butt{
                heihgt: 137px;
                width: 250px;
                background: @colors[7];
                border-radius: 20px;
                margin: 0 auto;
                cursor: pointer;
            }

            .chats{
                border-bottom-left-radius: 0px;
                border-bottom-right-radius: 0px;
                height: 125px;
                background: @colors[12];
            }

            .field {
                box-sizing: border-box;
                width: 100%;
                min-height: 1080px;
                margin: 0 auto;
                margin-top: 30px;
                background: @colors[12];
                border-top-left-radius: 78px;
                border-top-right-radius: 78px;
            }

            .image{
                height: 120px;
                width: 150px;
                margin: 0 auto;
                margin-top: -30px;
                background-repeat: no-repeat;
                background-size: cover;
            }

            #chats{
                background-image: url("../img/chatsChosen.svg");
            }

            #group{
                margin-top: -10px;
                height: 80px;
                width: 110px;
                background-image: url("../img/groups.svg");
            }

            #settings{
                margin-top: -5px;
                height: 80px;
                width: 100px;
                background-image: url("../img/settings.svg");
            }

            .lock{
                margin: 0 auto;
                margin-left: 32px;
                margin-top: -12px;
                height: 115px;
                width: 145px;
                background-image: url("../img/closedLock.svg");
                cursor: pointer;
            }

            .add{
                margin: 0 auto;
                margin-right: 63px;
                margin-top: 7px;
                height: 110px;
                width: 100px;
                background-image: url("../img/add.svg");
                cursor: pointer;
            }

            .chatSearch{
                background: none;
                border: none;
                height: 61px;
                width: 1151px;
                margin-top: 29px;
                box-sizing: border-box;
                background: @colors[14];
                border-radius: 20px;

                font-family: 'Inter', sans-serif;
                font-style: normal;
                font-weight: 500;
                font-size: 35px;
                line-height: 42px;
                color: @colors[1];
                text-align: center;
            }

            .chatSearch:focus {
                outline: none;
            }
           
            .chat{
                
                width: 1756px;
                height: 116px;
                margin: 0 auto;
                margin-top: 30px;
                background: @colors[14];
                border-radius: 20px;
                
            }

            .avatar{
                
                width: 80px;
                height: 80px;
                background: @colors[12];
                background-repeat: no-repeat;
                background-position: center;
                background-size: cover;
                border-radius: 50%;
                margin: 20px auto;
                margin-left: 20px;
            }

            .userName{
                font-family: 'Inter', sans-serif;
                font-style: normal;
                font-weight: 600;
                font-size: 35px;
                line-height: 42px;
                margin: auto;
                margin-top: -110px;
                margin-left: 150px;
                color: @colors[1];
                cursor: pointer;
            }

            .messageTime{
                font-family: 'Inter', sans-serif;
                font-style: normal;
                font-weight: 400;
                font-size: 24px;
                line-height: 35px;
                color: @colors[1];
                margin: auto;
                margin-top: -35px;
                margin-left: 1650px;
            }

            .message{
                width: 1506px;
                font-family: 'Inter', sans-serif;
                font-style: normal;
                font-weight: 700;
                font-size: 24px;
                line-height: 35px;
                color: @colors[1];
                margin: auto;
                margin-top: 15px;
                margin-left: 150px;
                overflow: hidden;
                cursor: pointer;
            }

        </style>
        <title>@ViewData["Title"]</title>
        <link rel="stylesheet" href="~/css/ChatsAdaptive.css" />
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap" rel="stylesheet">
        <script src="~/lib/signalr/dist/browser/signalr.js"></script>
        <script src="~/lib/jquery/dist/jquery.js"></script>
    </head>

<body onselectstart="return false">
        <div class="container">
            <div class="butt chats" ><div class="image" id="chats"></div></div>
            <div class="butt" onclick="window.location='./Squads'"><div class="image" id="group"></div></div>
            <div class="butt"><div class="image" id="settings"></div></div>
        </div>

        <div class="field">
            <div class="container">
                <div class="image lock"></div>
                <input class="chatSearch" />
                <div class="image add"></div>
            </div>

            <div class="container2">
                @if (Model != null)
                {
                    @foreach (var chat in Model)
                    {

                        <div class="chat" id="@chat.Id">
                            <img class="avatar" src="data:image/jpeg;base64,@(Convert.ToBase64String(chat.Avatar))" />
                        <div class="userName" onclick="window.location='../Chat/Main/@chat.Id.ToString()';">@chat.UserName</div>
                        <div class="messageTime @chat.Id" onclick="window.location.href='../Chat/Main/@chat.Id.ToString()';">@chat.MessageTime.ToLocalTime().ToShortTimeString()</div>
                        <div class="message @chat.Id"  onclick="window.location.href='../Chat/Main/@chat.Id.ToString()';">@chat.Message</div>
                        </div>
                    }

                <div class="chat"></div>
                <div class="chat"></div>
                <div class="chat"></div>
                <div class="chat"></div>
                <div class="chat"></div>
                <div class="chat"></div>
                <div class="chat"></div>
                }

            </div>
        </div>

    <script>
        "use strict";
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("https://localhost:7112/ChatHub")
            .build();
        connection.start().then(() => { 
                
            @foreach(var item in Model){
                @:connection.invoke('JoinGroup', '@item.Id.ToString()', '@LimqClient.Settings.SettingArray.MyUser.Id.ToString()');
            }
               
            })
            .catch(err => alert(err.toString()));


        
        
        connection.on("ReceiveMessage", (user, message, time) => {
            let result1 = document.getElementsByClassName("message " + user);
            let result2 = document.getElementsByClassName("messageTime " + user);
            if(result1.length > 0 && result2.length > 0){
                result1[0].textContent = message;
                result2[0].textContent = time;
                $(".container2").prepend($("#" + user));
            }
            else{

            }
        });
       
    </script>
    
</body>

</html>